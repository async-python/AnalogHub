name: analog_workflow

on: [push]

jobs:
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    if: contains('
      refs/heads/master
      refs/heads/main
      ', github.ref)
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub Backend
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: vardeath/analog_app_backend:v1.0
          context: backend
          file: backend/Dockerfile
      - name: Push to Docker Hub Frontend
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: vardeath/analog_app_frontend:v1.0
          context: frontend
          file: frontend/Dockerfile

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    if: contains('
      refs/heads/master
      refs/heads/main
      ', github.ref)
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: execute remove old data remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd ~/app/
            sudo docker-compose down
            cd ~
            sudo rm -r -f ./app/
      - name: copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          source: "docker-compose.yml, backend/curl_entrypoint.sh, backend/scripts/nginx/*.conf, backend/db/es_schemes/*.json"
          target: "~/app/"
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        env:
          PROD_ENV_FILE: ${{ secrets.PROD_ENV_FILE }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd ~
            mkdir -p ./app/frontend/static/
            cp -r ./static_files/* ./app/frontend/static/
            cd ~/app
            touch .env
            echo "${{ secrets.PROD_ENV_FILE }}" >> .env
            sudo docker image pull vardeath/analog_app_backend:v1.0
            sudo docker image pull vardeath/analog_app_frontend:v1.0
            sudo docker-compose up -d
