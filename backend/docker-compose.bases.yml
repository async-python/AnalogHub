version: '3.9'

volumes:
  es_volume_table:
  redis_volume_table:
  postgres_volume:

services:

  db_postgres_table:
    image: postgres:13.3-alpine
    container_name: db_postgres
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
      - ./scripts/postgresql:/docker-entrypoint-initdb.d
    env_file:
      - .env
    restart: always
    expose:
      - 5432
#    ports:
#      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    network_mode: "host"

  db_elastic_table:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.3
    container_name: db_elastic_table
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - es_volume_table:/usr/share/elasticsearch/data
    env_file:
      - .env
    expose:
      - 9200
#    ports:
#      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail ${ELASTIC_HOST}:${ELASTIC_PORT}/_cluster/health || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    network_mode: "host"

  es_init_table:
    image: curlimages/curl:7.79.1
    container_name: es_init_table
    entrypoint: ["sh", "/home/curl_user/curl_entrypoint.sh"]
    env_file:
      - .env
    volumes:
      - ./db/es_schemes/scheme_analog.json:/home/curl_user/scheme_analog.json
      - ./db/es_schemes/scheme_product.json:/home/curl_user/scheme_product.json
      - ./curl_entrypoint.sh:/home/curl_user/curl_entrypoint.sh
    depends_on:
      db_elastic_table:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    network_mode: "host"

  db_redis_table:
    image: 'redis:6.2.6'
    container_name: db_redis
    volumes:
      - redis_volume_table:/usr/local/etc/redis/redis.conf
    env_file:
      - .env
    expose:
      - ${REDIS_PORT}
    command: redis-server --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    network_mode: "host"