version: '3.9'

x-app-api:
  &fastapi_app_table
  image: vardeath/analog_app:v1.0
  restart: always
  env_file:
    - .env
  depends_on:
    es_init_table:
      condition: service_completed_successfully
    db_redis_table:
      condition: service_healthy
  logging:
    driver: "json-file"
    options:
      max-size: "200k"
      max-file: "10"

volumes:
  es_volume_table:
  redis_volume_table:
  celery_volume_table:
  file_volume:
  static_volume:
  media_volume:

services:

  db_elastic_table:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.3
    container_name: db_elastic_table
    restart: always
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - es_volume_table:/usr/share/elasticsearch/data
    env_file:
      - .env
    expose:
      - 9200
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail ${ELASTIC_HOST}:${ELASTIC_PORT}/_cluster/health || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  es_init_table:
    image: curlimages/curl:7.79.1
    container_name: es_init_table
    restart: always
    entrypoint: ["sh", "/home/curl_user/curl_entrypoint.sh"]
    env_file:
      - .env
    volumes:
      - ./db/es_schemes/scheme_analog.json:/home/curl_user/scheme_analog.json
      - ./db/es_schemes/scheme_product.json:/home/curl_user/scheme_product.json
      - ./curl_entrypoint.sh:/home/curl_user/curl_entrypoint.sh
    depends_on:
      db_elastic_table:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  db_redis_table:
    image: 'redis:6.2.6'
    container_name: db_redis
    restart: always
    volumes:
      - redis_volume_table:/usr/local/etc/redis/redis.conf
    env_file:
      - .env
    expose:
      - ${REDIS_PORT}
    command: redis-server --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  fastapi_app_analog:
    container_name: fastapi_app_analog
    <<: *fastapi_app_table
    restart: on-failure
    volumes:
      - file_volume:/fastapi/file_storage/
    expose:
      - 8000

  celery_worker:
    <<: *fastapi_app_table
    container_name: celery_worker
    command: celery --app worker.celery_app worker --loglevel=info
    volumes:
      - file_volume:/fastapi/file_storage/
      - celery_volume_table:/usr/src/app
    depends_on:
      - fastapi_app_analog

  celery_beat:
    <<: *fastapi_app_table
    container_name: celery_beat
    command: celery -A worker.celery_app beat --loglevel=info
    volumes:
      - file_volume:/fastapi/file_storage/
      - celery_volume_table:/usr/src/app
    depends_on:
      - fastapi_app_analog
      - celery_worker

  dashboard:
    <<: *fastapi_app_table
    command: celery --app=worker.celery_app flower --basic_auth=${FLOWER_USER}:${FLOWER_PASSWORD} --url_prefix=flower --port=${FLOWER_PORT}
    expose:
      - ${FLOWER_PORT}
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}/0
    depends_on:
      db_redis_table:
        condition: service_healthy
      celery_worker:
        condition: service_started

  nginx_analog:
    image: nginx:1.19.5-alpine
    container_name: nginx_analog
    restart: always
    volumes:
      - static_volume:/code/static/
      - media_volume:/code/media/
      - ./scripts/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./scripts/nginx/nginx.conf:/etc/nginx/nginx.conf
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    ports:
      - "80:80"
    env_file:
      - ./.env
    depends_on:
      - fastapi_app_analog
      - dashboard